'use client';

import { useState, useEffect } from 'react';
import Link from 'next/link';

export default function ProjectsPage() {
  const [projects, setProjects] = useState([]);
  const [statusFilter, setStatusFilter] = useState('');

  useEffect(() => {
    fetch('/api/projects')
      .then((res) => res.json())
      .then((data) => setProjects(data))
      .catch((error) => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤:', error));
  }, []);

  const filteredProjects = statusFilter
    ? projects.filter((proj) => proj.status === statusFilter)
    : projects;

  return (
    <div className="max-w-7xl mx-auto p-8">
      <h1 className="text-3xl font-bold text-gray-900 mb-6">üèó –ü—Ä–æ–µ–∫—Ç—ã</h1>

      {/* –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É */}
      <div className="mb-4 flex items-center space-x-4">
        <select
          className="border p-2 rounded-md shadow-sm"
          value={statusFilter}
          onChange={(e) => setStatusFilter(e.target.value)}
        >
          <option value="">üîé –í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã</option>
          <option value="pending">‚è≥ –û–∂–∏–¥–∞–µ—Ç –Ω–∞—á–∞–ª–∞</option>
          <option value="in_progress">‚öô –í —Ä–∞–±–æ—Ç–µ</option>
          <option value="completed">‚úÖ –ó–∞–≤–µ—Ä—à—ë–Ω</option>
        </select>
        <Link
          href="/projects/create"
          className="bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition"
        >
          ‚ûï –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
        </Link>
      </div>

      {/* –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ */}
      <table className="w-full border-collapse rounded-md overflow-hidden shadow-lg">
        <thead className="bg-gray-700 text-white">
          <tr>
            <th className="px-4 py-2 text-left">–ù–∞–∑–≤–∞–Ω–∏–µ</th>
            <th className="px-4 py-2 text-left">–û–ø–∏—Å–∞–Ω–∏–µ</th>
            <th className="px-4 py-2 text-left">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</th>
            <th className="px-4 py-2 text-left">–î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è</th>
            <th className="px-4 py-2 text-left">–°—Ç–∞—Ç—É—Å</th>
            <th className="px-4 py-2">–î–µ–π—Å—Ç–≤–∏—è</th>
          </tr>
        </thead>
        <tbody>
          {filteredProjects.map((proj) => (
            <tr key={proj.id} className="border-b hover:bg-gray-100">
              <td className="px-4 py-2">{proj.title}</td>
              <td className="px-4 py-2">{proj.description}</td>
              <td className="px-4 py-2">{new Date(proj.startDate).toLocaleDateString()}</td>
              <td className="px-4 py-2">
                {proj.endDate ? new Date(proj.endDate).toLocaleDateString() : '‚Äî'}
              </td>
              <td className="px-4 py-2">
                <span
                  className={`px-2 py-1 rounded-md text-white ${
                    proj.status === 'pending'
                      ? 'bg-yellow-500'
                      : proj.status === 'in_progress'
                      ? 'bg-blue-500'
                      : 'bg-green-500'
                  }`}
                >
                  {proj.status === 'pending'
                    ? '‚è≥ –û–∂–∏–¥–∞–µ—Ç'
                    : proj.status === 'in_progress'
                    ? '‚öô –í —Ä–∞–±–æ—Ç–µ'
                    : '‚úÖ –ó–∞–≤–µ—Ä—à—ë–Ω'}
                </span>
              </td>
              <td className="px-4 py-2 flex space-x-2">
                <Link
                  href={`/projects/${proj.id}`}
                  className="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition"
                >
                  ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </Link>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}