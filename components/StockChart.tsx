'use client';

import { useEffect, useState } from 'react';
import { Bar } from 'react-chartjs-2';
import Chart from 'chart.js/auto';
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  BarElement,
  Title,
  Tooltip,
  Legend,
} from 'chart.js';

// ‚úÖ –Ø–≤–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã Chart.js
ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);

export default function StockChart() {
  const [report, setReport] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    fetch('/api/reports/stock')
      .then((res) => {
        if (!res.ok) {
          throw new Error(`–û—à–∏–±–∫–∞ API: ${res.status}`);
        }
        return res.json();
      })
      .then((data) => {
        console.log('–î–∞–Ω–Ω—ã–µ –æ—Ç—á—ë—Ç–æ–≤:', data);
        setReport(data);
        setLoading(false);
      })
      .catch((err) => {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä–∞—Ñ–∏–∫–∞:', err);
        setError(err.message);
        setLoading(false);
      });
  }, []);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ
  if (loading) return <p>‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞...</p>;
  if (error) return <p className="text-red-600">‚ùå –û—à–∏–±–∫–∞: {error}</p>;
  if (report.length === 0) return <p className="text-gray-600">üìâ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞.</p>;

  // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
  const data = {
    labels: report.map((row) => row.category || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'),
    datasets: [
      {
        label: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
        data: report.map((row) => row._sum?.quantity || 0),
        backgroundColor: 'rgba(54, 162, 235, 0.6)',
      },
    ],
  };

  return (
    <div className="mt-10">
      <h2 className="text-xl font-semibold mb-4">üìà –ì—Ä–∞—Ñ–∏–∫ —Å–∫–ª–∞–¥—Å–∫–∏—Ö –∑–∞–ø–∞—Å–æ–≤</h2>
      {report.length > 0 ? (
        <Bar data={data} options={{ responsive: true, scales: { x: { type: 'category' }, y: { beginAtZero: true } } }} />
      ) : (
        <p className="text-gray-600">üìâ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞.</p>
      )}
    </div>
  );
}